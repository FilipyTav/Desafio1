/* Navegadores adicionam estilos em alguns elementos, o 
/* que deixa mais complicado para fazer customização.
/* A parte abaixo remove desses estilos */
* {
    margin: 0;
    padding: 0;
    font-size: 16px;
    box-sizing: border-box;
}

/* Corpo do site. Inicialmente, seu tamanho é reduzido pelo 
/* tamanho do conteúdo dentro de si. 
/* A parte abaixo força o corpo a ter a altura da tela, independentemente
/* de seu conteúdo. */
body {
    /* vh - view-height - tamanho da tela */
    /* 100% do tamanho da tela */
    min-height: 100vh;
}

/* Remove estilos padrão de links, especificamente */
a,
a:link,
a:visited,
a:hover,
a:active {
    color: inherit;
    text-decoration: inherit;
    font-weight: inherit;
}

/* Flexbox é um assunto complicado. Veja: https://developer.mozilla.org/pt-BR/docs/Learn/CSS/CSS_layout/Flexbox */
/* Basicamente, é um elemento que pode mudar seu tamanho de acordo */
/* com algumas especificações */
nav,
nav ul {
    display: flex;

    /* row - horizontal */
    /* column - vertical */
    flex-flow: row now;
}

/* Barra de navegação, geralmente no topo do site */
nav {
    /* Cor de fundo */
    background-color: lavender;

    /* Espaço entre conteúdo do elemento e suas bordas */
    /* padding: 1.5em 2em; */
    padding: 1.5em 1em;

    /* Propriedade da flexbox - posiciona elementos horizontalmente no centro */
    justify-content: center;
}

nav ul {
    /* Remove a bolinha antes do elemento */
    list-style: none;

    justify-content: center;

    min-width: 100%;

    /* Propriedade flex - espaço entre os elementos */
    gap: 20%;

    font-size: 0.6em;
}

nav ul li {
    position: relative;
}

nav li a {
    padding: 0.2em 0.4em;

    /* Largura e altura máximos - */
    /* ocupa o tamanho do container */
    width: 100%;
    height: 100%;

    display: inline-block;

    position: relative;
    z-index: 1;

    cursor: pointer;
}

/* ::before e ::after - pseudoelementos */
/* assunto mais avançado - elementos que */
/* não precisam ser expressados em HTML */
ul li a::before,
ul li a::after {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
}

ul li a::before {
    content: "";
    background-color: red;

    width: 0;

    transition: width 1s ease;
    z-index: -1;

    pointer-events: none;
}

ul li a::after {
    /* Fica invisível se não fazer isso */
    content: "";

    /* Tamanho zero no início */
    /* não quero que apareça */
    width: 0;

    /* Blur nos elementos que estão por trás */
    backdrop-filter: blur(0.7px);

    /* Transition - propriedades a serem animadas */
    /* Em order: propriedade, tempo de duração e */
    /* estil de animação */
    /* Veja: https://developer.mozilla.org/pt-BR/docs/Web/CSS/transition */
    transition: width 1s ease;

    pointer-events: none;
}

ul li a:hover::before,
ul li a:hover::after {
    width: 100%;
}

main {
    /* Padding somente em cima e em baixo */
    padding: 1em 0;

    display: flex;
    flex-flow: column nowrap;

    gap: 1em;
}

/* . -> indica classe */
/* Section com a classe de imagem_container */
section.imagem_container {
    display: flex;
    flex-flow: column nowrap;
}

.texto {
    display: flex;
    flex-flow: column nowrap;

    justify-content: space-between;

    /* red, green, blue, opacity */
    background-color: rgb(234, 123, 143, 0.5);
}

.texto button {
    align-self: center;
    padding: 0.5em 2em;

    /* Arredondar as bordas */
    /* experimente com outros valores */
    /* e veja o que acontece */
    border-radius: 13px;

    /* Borda. Em order: */
    /* grossura, estilo e cor */
    border: 2px solid purple;

    background-color: lavender;
}

.texto button:hover {
    background-color: purple;
    color: lavender;

    /* Estilo do mouse quando passa */
    /* por cima do elemento */
    /* Veja: https://developer.mozilla.org/pt-BR/docs/Web/CSS/cursor */
    cursor: pointer;
}

section.imagem_container img {
    /* vw - view width - largura da tela */
    max-width: 100vw;
    height: 60vh;
}

section.imagem_container p {
    padding: 1em 0.5em;
    font-size: 1em;
}

/* seleciona a classe hero */
.hero {
    background-color: royalblue;

    /* padding: (em cima e em baixo) (laterais) */
    padding: 0.5em 1em;

    position: relative;
}

.hero h1 {
    margin-bottom: 1em;

    text-align: center;
}

.hero p {
    padding-bottom: 1.5em;
}

.hero span {
    /* Tamanho da fonte */
    font-size: 2em;

    /* Negrito */
    font-weight: bold;

    position: absolute;
}

/* left - right - top - bottom */
/* valores usados para posicionar elementos livremente */
/* dentro do container */
.hero span:first-of-type {
    /* Colado na esquerda */
    left: 0;

    /* 20% longe da borda de cima */
    top: 19%;
}

.hero span:nth-of-type(2) {
    /* 1% longe da direita */
    right: 1%;

    /* 10% longe da borda de baixo, só */
    /* que pro lado oposto */
    bottom: -10%;
}

/* Para responsividade. Quando a tela for maior */
/* que o valor dado(50em = 800px), esses valores */
/* serão aplicados */
@media (min-width: 50em) {
    section.imagem_container {
        flex-flow: row nowrap;
    }

    section.imagem_container img {
        /* vw - view width - largura da tela */
        width: 50vw;
        height: auto;

        /* Propriedade flex - elemento não diminui de tamanho */
        flex-shrink: 0;
    }

    section.imagem_container p {
        position: relative;
    }
}
